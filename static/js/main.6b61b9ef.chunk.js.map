{"version":3,"sources":["AppHeader.js","ProfileCard.js","App.js","serviceWorker.js","index.js"],"names":["AppHeader","className","ProfileCard","props","toggleData","setState","showData","state","button","handleTags","e","thisTarget","target","key","tag","value","data","ID","profile","id","saveTag","handleOnChange","Stud_tags","bind","sum","i","this","grades","length","Number","show","alt","src","pic","firstName","lastName","email","company","skill","map","grade","tags","item","j","type","placeholder","onChange","onKeyDown","onClick","React","Component","App","profiles","searchResult","searchTerm","KEY","savedTags","searchTag","searchedTags","handleInputChange","event","filter","toLowerCase","includes","handleTagInputChange","t","p","saveTagsofStud","newData","localStorage","setItem","JSON","stringify","getTagsOfStudents","getItem","parse","fetch","then","res","ok","json","students","catch","console","error","getProfiles","profileJsx","style","padding","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.6b61b9ef.chunk.js","sourcesContent":["import React from 'react'\nimport './AppHeader.css'\n\nfunction AppHeader(){\n    return (\n        <header className=\"App-header\">\n            <h1>\n                Snehal Gondaliya - Assessments\n            </h1>\n        </header>\n    )\n}\n\nexport default AppHeader","import React from 'react'\nimport { FaPlus , FaMinus } from 'react-icons/fa'\nimport './ProfileCard.css'\n\nclass ProfileCard extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            showData : false,\n            button : <FaPlus />,\n            tag : '',\n            Stud_tags : []\n        }\n        this.toggleData = this.toggleData.bind(this);\n        this.handleOnChange = this.handleOnChange.bind(this);\n        this.handleTags = this.handleTags.bind(this);\n    }\n\n    toggleData = () => {\n        this.setState({ showData : !this.state.showData })\n        if(this.state.showData){\n            this.setState({button : <FaPlus /> })\n        }\n        else{\n            this.setState({button : <FaMinus /> })\n        }\n    }\n    handleTags = (e) => {\n        let thisTarget = e.target;\n        if (e.key === 'Enter') {\n            this.setState({tag : thisTarget.value});\n            let data = {\n                ID : this.props.profile.id,\n                tag : this.state.tag\n            }\n            this.props.saveTag(data);\n            this.setState({tag : \"\"})\n        }\n    }\n    \n    handleOnChange = (e) => {\n        this.setState({tag : e.target.value})\n    }\n\n    render(){\n        \n        let sum = 0;\n        for(let i=0; i< this.props.profile.grades.length; i++){\n            sum+= Number(this.props.profile.grades[i])\n        }\n        const show = (this.state.showData) ? \"show\" : \"hide\" ;\n        \n        return(\n            <div className=\"ProfileCard\">\n                <div className=\"profile-avatar\">\n                    <img alt=\"profile\" src={this.props.profile.pic} />\n                </div>\n                <div className=\"card-body\">\n                    <p className=\"Profile-name\"> {this.props.profile.firstName} {this.props.profile.lastName}</p>\n                    <p> {this.props.profile.email} </p>\n                    <p> {this.props.profile.company} </p>\n                    <p> {this.props.profile.skill} </p>\n                    <p className=\"padding-bottom\"> {sum/this.props.profile.grades.length}% </p>\n                    <div className= {\"hiddent-part \" +  show}>\n                    {\n                        this.props.profile.grades.map((grade, i) => (\n                            <p key={i} > <b> Test{i+1} :</b> {grade} </p>\n                        ))\n                    }\n                    <br/>\n                    <ul>\n                    {   \n                        this.props.tags.map((item,j) =>{\n                            if(this.props.profile.id === item.ID){\n                                return <li key={ j }>{ item.tag }</li>\n                            }\n                            else{\n                                return \"\";\n                            }\n                        })\n                        \n                    }\n                    </ul>\n                    \n                    <input type=\"text\" value={this.state.tag} placeholder=\"Add a tag\" onChange={this.handleOnChange} onKeyDown={this.handleTags} className=\"add-tag-input\" />\n                    \n                    </div>\n                </div>\n                <div className=\"expand-btn\" onClick={this.toggleData}>\n                    {this.state.button}\n                </div>\n            </div>\n        )\n    };\n}\n\nexport default ProfileCard","import React from 'react';\nimport './App.css';\nimport AppHeader from './AppHeader';\nimport ProfileCard from './ProfileCard';\n\nclass App extends React.Component {\n\n  state = {\n    profiles : [],\n    searchResult : [],\n    searchTerm : '',\n    KEY : 'SNEHAL_STUDENT_TAGS',\n    savedTags : [],\n    searchTag : '',\n    searchedTags : []\n  }\n\n  getProfiles() {\n    fetch(`https://api.hatchways.io/assessment/students`)\n    .then(res => {\n          if(res.ok){\n            return res.json()\n          }else{\n            return \"Something went wrong\"\n          }\n    })\n    .then(profiles => this.setState({ profiles: profiles.students }))\n    .catch(console.error)\n  }\n\n  handleInputChange = (event) => {\n      \n    this.setState({  searchTerm : event.target.value })\n    this.setState ({ searchResult : this.state.profiles.filter(profile => { \n        return( profile.firstName.toLowerCase().includes(event.target.value) || profile.lastName.toLowerCase().includes(event.target.value))\n    } )})\n}\n\nhandleTagInputChange = (event) => {\n  this.setState({  searchTag : event.target.value })\nif(event.target.value === \"\"){\n  this.setState({searchResult : []})\n}\n  else{\n    this.setState ({ searchedTags : this.state.savedTags.filter(tag => { \n      return( tag.tag.toLowerCase().includes(event.target.value))\n  } )})\n\n    let tags = []\n    this.state.searchedTags.map(t=>{\n      return tags = [...tags,...this.state.profiles.filter(p => {\n        return p.id === t.ID\n      })]\n    })\n    this.setState({ searchResult : tags })\n  }\n}\n\nsaveTagsofStud = (data) => {\n  let newData = [data, ...this.state.savedTags]\n  localStorage.setItem(this.state.KEY,JSON.stringify(newData));\n  this.setState({ savedTags : newData })\n}\n\ngetTagsOfStudents = () => {\n  if(localStorage.getItem(this.state.KEY)){\n      this.setState({ savedTags : JSON.parse(localStorage.getItem(this.state.KEY))})\n  }\n  else{\n      localStorage.setItem(this.state.KEY,JSON.stringify(this.state.savedTags));\n  }\n}\n\ncomponentDidMount () {\n  this.getProfiles();\n  this.getTagsOfStudents();\n}\n\nrender(){\n  \n  let profileJsx = ''\n\n  if(this.state.searchResult.length > 0){\n    profileJsx = this.state.searchResult.map(profile =>\n      (<ProfileCard key={profile.id} saveTag={this.saveTagsofStud} tags={this.state.savedTags} profile={profile} />) )\n  }else{\n    profileJsx = this.state.profiles.map(profile =>\n      (<ProfileCard key={profile.id} saveTag={this.saveTagsofStud} tags={this.state.savedTags} profile={profile} />) )\n  }\n  \n  return (\n    <div className='App'>\n      <AppHeader />\n\n      <input type=\"text\" id=\"name-input\" value={this.state.searchTerm} placeholder=\"Search by name\" onChange = {this.handleInputChange} />\n  \n      <input type=\"text\" id=\"tag-input\" value={this.state.searchTag} placeholder=\"Search by tag\" onChange = {this.handleTagInputChange} />\n\n      <main className='profileList' style={{ padding: '2rem'}}>\n        {profileJsx}\n      </main>\n      \n    </div>\n  )\n};\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}